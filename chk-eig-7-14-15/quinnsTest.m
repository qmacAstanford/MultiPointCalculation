clear

testMatRoots=0;
chooseCutoff=0;
plotEig=0;
prefactor=1;
workWithIm=0;

if prefactor
    manypoints=1;
    if manypoints
        npts=150;
    else
        npts=1;
    end
    ORDEig=10;
    ORDL=5;

    R=zeros(npts,ORDEig,ORDL); % which k, which eigenvalue, which m
    if manypoints
        K=logspace(-5,5,npts);
    else
        K=0.1;
    end
    
    % R( K index, eig index,m index )
    for count=1:npts
        if K(count) < 800
            R(count,:,:)=IntermediateKEigenValues(K(count),ORDEig,ORDL);
        else
            R(count,:,:)=LargeKEigenValues(K(count),ORDEig,ORDL,3);
        end
    end
    
%     figure(10)
%     hold on
%     semilogx(K,R(:,1,1),'o',K,R(:,2,1),'o',K,R(:,3,1),'o')
    GLMK_largeKV2=zeros(npts,ORDL,ORDL,ORDL,ORDEig)*NaN;
    GLMK_largeK=zeros(npts,ORDL,ORDL,ORDL,ORDEig)*NaN;
    GLMK_smallK=zeros(npts,ORDL,ORDL,ORDL,ORDEig)*NaN;
    usinggl=zeros(npts,ORDL,ORDEig);
    usingCalRes=zeros(npts,ORDEig);
    for count=1:npts
        new=1;
        if new
            GLMK_largeKV2(count,:,:,:,:)=glmV2(K(count),squeeze(R(count,:,:)),ORDEig,ORDL,500);  
        else
            GLMK_largeKV2(count,:,:,:,:)=  glm(K(count),squeeze(R(count,:,:)),ORDEig,ORDL,501); 
        end
        
        for lam1=0:ORDL-1
            for lam2=0:ORDL-1
                for iEig=1:ORDEig
                    for mu=0:min(lam1,lam2)
                        GLMK_smallK(count,lam1+1,lam2+1,mu+1,iEig)=SmallAsympRes(K(count),iEig,lam1,lam2,mu,3);
                    end
                end
            end
        end
        usinggl(count,:,:)=gl(R(count,:,1),K(count),3,ORDEig,ORDL,500)';%  zeros(ORDEig,ORDL);
        usingCalRes(count,:)=CalRes(R(count,:,1),K(count),3,500);
    end
    doesItWorkForLowL=0;
     
    if doesItWorkForLowL && manypoints
        figure(1)

        lam1=0;
        lam2=0;
        mu=0;
        L=0;
        hold on
        GLMK_largeK(:,lam1+1,lam2+1,mu+1,L+1);
        semilogx(K,real(GLMK_largeK(:,lam1+1,lam2+1,mu+1,L+1)),'-x',...
                 K,real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),...
                 K,real(    usinggl(:,lam1+1,            L+1)),'.',...
                 K,real(usingCalRes(:,                   L+1)),'o');
        legend('largK','smallk','old')
        title(sprintf('Compair methodes lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
        xlabel('K')
        ylim([-2,2])
        hold off
        
        figure(2)
        hold on
          loglog(K,abs(real(GLMK_largeK(:,lam1+1,lam2+1,mu+1,L+1))),...
                 K,abs(real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1))),...
                 K,abs(real(    usinggl(:,lam1+1,            L+1))),'.',...
                 K,abs(real(usingCalRes(:,                   L+1))),'o');
        legend('largK','smallk','old')
        title(sprintf('Compair methodes lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
        xlabel('K')  
        hold off  
        figure(1);set(gca,'xscale','log');
        figure(2);set(gca,'xscale','log');set(gca,'yscale','log')   
    elseif manypoints
         
         % leg=cell(ORDEig*2,1);
         types={'.','x','o','--','.','x','o','--','.','x','o','--'};
         MakeSubplots=1;
         for L=0:ORDEig-1
            COL=(L)/(ORDEig-1);

            lam1=3;
            lam2=3;
            mu=1;
            %L=1;
            figure(1)
            if MakeSubplots; subplot(ceil(ORDEig/2),2,L+1); end
            hold on
            plot(K,real(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1)),'x','Color',[COL 0 1-COL]);
            plot(K,real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),'-','Color',[COL 0 1-COL]);
            % leg{2*L+1}=sprintf('large K, L=%d',L);
            % leg{2*L+2}=sprintf('small K, L=%d',L);
            %legend('largK','smallk')
            title(sprintf('Re(G_l_m(K)) lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
            set(gca,'xscale','log');
            xlabel('K')
            ylim([-2,2])
            hold off

            figure(2)
            if MakeSubplots; subplot(ceil(ORDEig/2),2,L+1); end
            hold on
            semilogx(K,imag(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1)),'x','Color',[COL 0 1-COL]);
            semilogx(K,imag(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),'-','Color',[COL 0 1-COL]);
            %legend('largK','smallk')
            title(sprintf('Im(G_l_m(K)) lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
            xlabel('K')
            set(gca,'xscale','log');
            ylim([-2,2])       


            figure(3)
            if MakeSubplots; subplot(ceil(ORDEig/2),2,L+1); end
            hold on
            loglog(K,abs(real(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1))),'x','Color',[COL 0 1-COL]);
            loglog(K,abs(real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1))),'-','Color',[COL 0 1-COL]);
%             loglog(K,abs(real(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1))),types{L+1},'Color',[COL 0 1-COL]);
%             loglog(K,abs(real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1))),types{L+1},'Color',[COL 0 1-COL]);
            %legend('largK','smallk')
            title(sprintf('log Re(G_l_m(K) lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
            xlabel('K') 
            set(gca,'xscale','log');set(gca,'yscale','log') 
            hold off

            figure(4)
            if MakeSubplots; subplot(ceil(ORDEig/2),2,L+1); end
            hold on
            loglog(K,abs(imag(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1))),'x','Color',[COL 0 1-COL]);
            loglog(K,abs(imag(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1))),'-','Color',[COL 0 1-COL]);
            %legend('largK','smallk')
            title(sprintf('log Im(G_l_m(K) lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
            xlabel('K') 
            set(gca,'xscale','log');set(gca,'yscale','log') 
            hold off  
            
            figure(5)
            if MakeSubplots; subplot(ceil(ORDEig/2),2,L+1); end
            hold on
            loglog(K,abs(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1)-GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),'-','Color',[COL 0 1-COL]);
            %legend('largK','smallk')
            title(sprintf('abs compairison of methodes lam1=%d, lam2=%d, mu=%d, L=%d',lam1,lam2,mu,L))
            xlabel('K') 
            set(gca,'xscale','log');set(gca,'yscale','log') 
            hold off            
            
            figure(6)
            hold on
            if L==mu || L==mu+1
                if L==mu
                    plot(K,real(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1)),'-xb');
                end
                plot(K,real(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),'-c');
                plot(K,imag(GLMK_largeKV2(:,lam1+1,lam2+1,mu+1,L+1)),'xr');
                plot(K,imag(GLMK_smallK(:,lam1+1,lam2+1,mu+1,L+1)),'-m');
                plot(K,real(R(:,L+1,mu+1)),'or');
                plot(K,imag(R(:,L+1,mu+1)),'+k');
                set(gca,'xscale','log');
                legend(...
                       'Re Res large K',...
                       'Re Res small K',...
                       'Im Res large K',...
                       'Im Res small K',...
                       'Re Eig',...
                       'Im Eig')
                ylim([-6,2])
                title(sprintf('abs compairison of methodes lam1=%d, lam2=%d, mu=%d, L=%d,%d',lam1,lam2,mu,L,L+1))
                xlabel('K')
            end
            hold off
         end 

         
    
        
    end 
    
    
    
    
end

if plotEig
    npts=100;
    ORDEig=4;
    ORDL=5;

    R=zeros(npts,ORDEig,ORDL);
    K=logspace(-7,5,npts);

    for count=1:npts
        if K(count) < 800
            R(count,:,:)=IntermediateKEigenValues(K(count),ORDEig,ORDL);
        else
            R(count,:,:)=LargeKEigenValues(K(count),ORDEig,ORDL,3);
        end
    end

    figure
    semilogx(K,real(R(:,1,1)),'r',...
             K,real(R(:,1,2)),'r.',...
             K,real(R(:,1,3)),'ro',...
             K,real(R(:,1,4)),'r--',...
             K,real(R(:,2,1)),'b',...
             K,real(R(:,2,2)),'b.',...
             K,real(R(:,2,3)),'bo',...
             K,real(R(:,2,4)),'b--',...         
             K,real(R(:,3,1)),'g',...
             K,real(R(:,3,2)),'g.',...
             K,real(R(:,3,3)),'go',...
             K,real(R(:,3,4)),'g--',...         
             K,real(R(:,4,1)),'k',...
             K,real(R(:,4,2)),'k.',...
             K,real(R(:,4,3)),'ko',...
             K,real(R(:,4,4)),'k--');
    xlabel('|K|')
    ylabel('Re(Eigenvalue)')
    legend('location','eastoutside',...
           'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
           'L=1, M=0','L=1, M=1','L=1, M=2','L=1, M=3',...
           'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3',...
           'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3') 
    title('Cutoff is at K=200')

    % Now imagionary
    figure
    loglog(...
             K,imag(R(:,1,1)),'r',...
             K,imag(R(:,1,2)),'r.',...
             K,imag(R(:,1,3)),'ro',...
             K,imag(R(:,1,4)),'r--',...         
             K,imag(R(:,3,1)),'g',...
             K,imag(R(:,3,2)),'g.',...
             K,imag(R(:,3,3)),'go',...
             K,imag(R(:,3,4)),'g--'...                 
             );   
    ylabel('Im(Eigenvalue)')
    legend('location','eastoutside',...
           'L=0, M=0 intr','L=0, M=1 intr','L=0, M=2 intr','L=0, M=3 intr',...
           'L=2, M=0 intr','L=2, M=1 intr','L=2, M=2 intr','L=2, M=3 intr'...
           ); 
end

if workWithIm
    npts=70;
    ORDEig=5;
    ORDL=6;

    K=logspace(-1,5,npts);    
    
    R=zeros(npts,ORDEig,ORDL);
    for count=1:npts
        R(count,:,:)=IntermediateKEigenValues(K(count),ORDEig,ORDL);
    end    
    Rintr=R;
    
    R=zeros(npts,ORDEig,ORDL);
    for count=1:npts
        R(count,:,:)=LargeKEigenValues(K(count),ORDEig,ORDL,3);
    end
    Rlong=R;    
    
    p1=abs(imag(Rintr));
    p2=abs(imag(Rlong));
    loglog(...
           K,p1(:,2,1),'--k',...
           K,p2(:,2,1),'ok',...
           K,p1(:,2,2),'--b',...
           K,p2(:,2,2),'ob',...          
           K,p1(:,4,1),'x-r',...
           K,p2(:,4,1),'or',...
           K,p1(:,4,2),'--m',...
           K,p2(:,4,2),'om',... 
           K,p1(:,4,3),'--c',...
           K,p2(:,4,3),'oc',...
           K,p1(:,4,4),'--g',...
           K,p2(:,4,4),'og'... 
           )
    legend('L=0,1, M=0 inter',...
           'L=0,1, M=0 long',...
           'L=0,1, M=1 inter',...
           'L=0,1, M=1 long',...
           'L=2,3, M=0 inter',...
           'L=2,3, M=0 long',...
           'L=2,3, M=1 inter',...
           'L=2,3, M=1 long',...
           'L=2,3, M=2 inter',...
           'L=2,3, M=2 long',...
           'L=2,3, M=3 long',...
           'L=2,3, M=3 long')
       
    figure
    p1=imag(Rintr);
    p2=imag(Rlong);    
    semilogx(...
           K,p1(:,1,1),'--b',...
           K,p2(:,1,1),'ob',...
           K,p1(:,2,1),'--k',...
           K,p2(:,2,1),'ok',...
           K,p1(:,2,2),'--g',...
           K,p2(:,2,2),'og',...
           K,p1(:,3,1),'--r',...
           K,p2(:,3,1),'or',...
           K,p1(:,3,2),'--m',...
           K,p2(:,3,2),'om',...
           K,p1(:,3,3),'--c',...
           K,p2(:,3,3),'oc',...
           K,p1(:,4,1),'-b',...
           K,p2(:,4,1),'xb',...
           K,p1(:,4,2),'-k',...
           K,p2(:,4,2),'xk',... 
           K,p1(:,4,3),'-c',...
           K,p2(:,4,3),'xc',...
           K,p1(:,4,4),'-g',...
           K,p2(:,4,4),'xg'... 
           )
    legend('location','eastoutside',...
           'L=0, M=0 inter',...
           'L=0, M=0 long',...
           'L=1, M=0 inter',...
           'L=1, M=0 long',...
           'L=1, M=1 inter',...
           'L=1, M=1 long',...
           'L=2, M=0 inter',...
           'L=2, M=0 long',...
           'L=2, M=1 inter',...
           'L=2, M=1 long',...
           'L=2, M=2 long',...
           'L=2, M=2 long',...
           'L=3, M=0 inter',...
           'L=3, M=0 long',...
           'L=3, M=1 inter',...
           'L=3, M=1 long',...
           'L=3, M=2 long',...
           'L=3, M=2 long'...
           )    
       
     
    figure
    p3=abs(abs(imag(Rintr))-abs(imag(Rlong)));
    loglog(...
           K,p3(:,2,1),'--k',...
           K,p3(:,2,2),'--b',...          
           K,p3(:,4,1),'--r',...
           K,p3(:,4,2),'--m',... 
           K,p3(:,4,3),'--c',...
           K,p3(:,4,4),'--g'... 
           )
    legend('L=0,1, M=0',...
           'L=0,1, M=1',...
           'L=2,3, M=0',...
           'L=2,3, M=1',...
           'L=2,3, M=2',...
           'L=2,3, M=3')

    figure  
    p3=abs(abs(imag(Rintr))-abs(imag(Rlong)))./abs(imag(Rlong));
    loglog(...
           K,p3(:,2,1),'--k',...
           K,p3(:,2,2),'--b',...          
           K,p3(:,4,1),'--r',...
           K,p3(:,4,2),'--m',... 
           K,p3(:,4,3),'--c',...
           K,p3(:,4,4),'--g'... 
           )
    legend('L=0,1, M=0',...
           'L=0,1, M=1',...
           'L=2,3, M=0',...
           'L=2,3, M=1',...
           'L=2,3, M=2',...
           'L=2,3, M=3')
       
end


if chooseCutoff
    npts=100;
    ORDEig=4;
    ORDL=6;

    R=zeros(npts,ORDEig,ORDL);
    K=logspace(-6,5,npts);

    % now intermediate
    for count=1:npts
        R(count,:,:)=IntermediateKEigenValues(K(count),ORDEig,ORDL);
    end
    Rinter=R;
    figure
    h=semilogx(K,real(R(:,1,1)),'r',...
             K,real(R(:,2,1)),'b',...
             K,real(R(:,2,2)),'b.',...        
             K,real(R(:,3,1)),'g',...
             K,real(R(:,3,2)),'g.',...
             K,real(R(:,3,3)),'go',...         
             K,real(R(:,4,1)),'k',...
             K,real(R(:,4,2)),'k.',...
             K,real(R(:,4,3)),'ko',...
             K,real(R(:,4,4)),'k--');
    xlabel('|K|')
    ylabel('Re(Eigenvalue)')
%     legend('location','eastoutside',...
%            'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
%            'L=1, M=0','L=1, M=1','L=1, M=2','L=1, M=3',...
%            'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3',...
%            'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3') 
    for count=1:10
        set(h(count),'linewidth',2)
    end

    % Now large K  
    R=zeros(npts,ORDEig,ORDL);
    for count=1:npts
        R(count,:,:)=LargeKEigenValues(K(count),ORDEig,ORDL,3);
    end
    Rlong=R;

    hold on
    semilogx(K,real(R(:,1,1)),'ro',...
             K,real(R(:,2,1)),'c--',...
             K,real(R(:,2,2)),'c.-',...        
             K,real(R(:,4,1)),'mx',...
             K,real(R(:,4,2)),'m-x',...
             K,real(R(:,4,3)),'m.-',...
             K,real(R(:,4,4)),'mo');
    xlabel('|K|')
    ylabel('Re(Eigenvalue)')
    title('Real comparison')
    legend('location','eastoutside',...
           'L=0, M=0',...
           'L=1, M=0','L=1, M=1',...
           'L=2, M=0','L=2, M=1','L=2, M=2',...
           'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3',...
           'L=0; M=0 largeK',...
           'L=1; M=0 largeK',...
           'L=1; M=1 largeK',...
           'L=3,4; M=0 largeK',...
           'L=3,4; M=1 largeK',...
           'L=3,4; M=2 largeK',...
           'L=3,4; M=3 largeK') 
         
         
    % Now small K
%     R=zeros(npts,ORDEig,ORDL);
%     for count=1:npts
%         R(count,:,:)=SmallEigenvales(K(count),ORDEig,ORDL,3);
%     end
%     Rshort=R;
%     semilogx(K,real(R(:,1,1)),'m',...
%              K,real(R(:,1,2)),'m.',...
%              K,real(R(:,1,3)),'mo',...
%              K,real(R(:,1,4)),'m--',...
%              K,real(R(:,2,1)),'c',...
%              K,real(R(:,2,2)),'c.',...
%              K,real(R(:,2,3)),'co',...
%              K,real(R(:,2,4)),'c--',...         
%              K,real(R(:,3,1)),'y',...
%              K,real(R(:,3,2)),'y.',...
%              K,real(R(:,3,3)),'yo',...
%              K,real(R(:,3,4)),'y--',...         
%              K,real(R(:,4,1)),'m',...
%              K,real(R(:,4,2)),'m.',...
%              K,real(R(:,4,3)),'mo',...
%              K,real(R(:,4,4)),'m--');    
    
    % legend('location','eastoutside',...
    %        'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
    %        'L=1, M=0','L=1, M=1','L=1, M=2','L=1, M=3',...
    %        'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3',...
    %        'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3')

     ylim([-150,0])

     
     
     %  --- figure out which is better where ----
    figure 
    R=abs(real(R-Rinter));

    loglog(K,real(R(:,1,1)),'r',...
             K,real(R(:,2,1)),'b',...
             K,real(R(:,2,2)),'b.',...         
             K,real(R(:,3,1)),'g',...
             K,real(R(:,3,2)),'g.',...
             K,real(R(:,3,3)),'go',...       
             K,real(R(:,4,1)),'k',...
             K,real(R(:,4,2)),'k.',...
             K,real(R(:,4,3)),'ko',...
             K,real(R(:,4,4)),'k--');
    xlabel('|K|')
    ylabel('abs(Re(intermediateK)-Re(largeK))')
    legend('location','eastoutside',...
           'L=0, M=0',...
           'L=1, M=0','L=1, M=1',...
           'L=2, M=0','L=2, M=1','L=2, M=2',...
           'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3')
    title('Choosing real cutoff using absolute error')
    
    
    
    

    figure 
    R=abs(real(Rlong-Rinter)./Rinter);

    loglog(K,real(R(:,1,1)),'r',...
             K,real(R(:,2,1)),'b',...
             K,real(R(:,2,2)),'b.',...         
             K,real(R(:,3,1)),'g',...
             K,real(R(:,3,2)),'g.',...
             K,real(R(:,3,3)),'go',...        
             K,real(R(:,4,1)),'k',...
             K,real(R(:,4,2)),'k.',...
             K,real(R(:,4,3)),'ko',...
             K,real(R(:,4,4)),'k--');
    xlabel('|K|')
    ylabel('abs((Re(intermediateK)-Re(largeK))/Re(intermediate))')
    legend('location','eastoutside',...
           'L=0, M=0',...
           'L=1, M=0','L=1, M=1',...
           'L=2, M=0','L=2, M=1','L=2, M=2',...
           'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3')
    title('Choosing real cutoff using relitive error')
    
error('stop')    
    
    % Now imagionary
    figure
    loglog(...
             K,abs(imag(Rinter(:,1,1))),'r',...
             K,abs(imag(Rinter(:,1,2))),'r.',...
             K,abs(imag(Rinter(:,1,3))),'ro',...
             K,abs(imag(Rinter(:,1,4))),'r--',...         
             K,abs(imag(Rinter(:,3,1))),'g',...
             K,abs(imag(Rinter(:,3,2))),'g.',...
             K,abs(imag(Rinter(:,3,3))),'go',...
             K,abs(imag(Rinter(:,3,4))),'g--',...         
             K,abs(imag(Rlong(:,1,1))),'b',...
             K,abs(imag(Rlong(:,1,2))),'b.',...
             K,abs(imag(Rlong(:,1,3))),'bo',...
             K,abs(imag(Rlong(:,1,4))),'b--',...         
             K,abs(imag(Rlong(:,3,1))),'k',...
             K,abs(imag(Rlong(:,3,2))),'k.',...
             K,abs(imag(Rlong(:,3,3))),'ko',...
             K,abs(imag(Rlong(:,3,4))),'k--'...         
             );   
    ylabel('Im(Eigenvalue)')
    legend('location','eastoutside',...
           'L=0, M=0 intr','L=0, M=1 intr','L=0, M=2 intr','L=0, M=3 intr',...
           'L=2, M=0 intr','L=2, M=1 intr','L=2, M=2 intr','L=2, M=3 intr',...
           'L=0, M=0 long','L=0, M=1 long','L=0, M=2 long','L=0, M=3 long',...
           'L=2, M=0 long','L=2, M=1 long','L=2, M=2 long','L=2, M=3 long'...
           ); 
    title('imaginary comparison')
 
    figure
    semilogx(...
             K,imag(Rinter(:,1,1)),'r',...
             K,imag(Rinter(:,1,2)),'r.',...
             K,imag(Rinter(:,1,3)),'ro',...
             K,imag(Rinter(:,1,4)),'r--',...         
             K,imag(Rinter(:,3,1)),'g',...
             K,imag(Rinter(:,3,2)),'g.',...
             K,imag(Rinter(:,3,3)),'go',...
             K,imag(Rinter(:,3,4)),'g--',...         
             K,imag(Rlong(:,1,1)),'b',...
             K,imag(Rlong(:,1,2)),'b.',...
             K,imag(Rlong(:,1,3)),'bo',...
             K,imag(Rlong(:,1,4)),'b--',...         
             K,imag(Rlong(:,3,1)),'k',...
             K,imag(Rlong(:,3,2)),'k.',...
             K,imag(Rlong(:,3,3)),'ko',...
             K,imag(Rlong(:,3,4)),'k--'...         
             );   
    ylabel('Im(Eigenvalue)')
    legend('location','eastoutside',...
           'L=0, M=0 intr','L=0, M=1 intr','L=0, M=2 intr','L=0, M=3 intr',...
           'L=2, M=0 intr','L=2, M=1 intr','L=2, M=2 intr','L=2, M=3 intr',...
           'L=0, M=0 long','L=0, M=1 long','L=0, M=2 long','L=0, M=3 long',...
           'L=2, M=0 long','L=2, M=1 long','L=2, M=2 long','L=2, M=3 long'...
           ); 
    title('imaginary comparison')    
    

    figure()
    R=abs(imag(Rinter-Rlong));
      loglog(K,R(:,1,1),'r',...
             K,R(:,1,2),'r.',...
             K,R(:,1,3),'ro',...
             K,R(:,1,4),'r--',...
             K,R(:,3,1),'b',...
             K,R(:,3,2),'b.',...
             K,R(:,3,3),'bo',...
             K,R(:,3,4),'b--');
    xlabel('|K|')
    ylabel('abs(Im(intermediateK)-Im(largeK))')
    legend('location','eastoutside',...
           'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
           'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3')
    title('Choosing imaginary cutoff')

    figure()
    R=abs(imag(Rinter-Rlong)./imag(Rinter));
      loglog(K,R(:,1,1),'r',...
             K,R(:,1,2),'r.',...
             K,R(:,1,3),'ro',...
             K,R(:,1,4),'r--',...
             K,R(:,3,1),'b',...
             K,R(:,3,2),'b.',...
             K,R(:,3,3),'bo',...
             K,R(:,3,4),'b--');
    xlabel('|K|')
    ylabel('abs((Im(interK)-Im(largeK))/Im(inter))')
    legend('location','eastoutside',...
           'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
           'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3')
    title('Choosing imaginary cutoff, loglog scale, relitive error')    
    
    figure()
    R=abs(imag(Rinter-Rlong));
    semilogx(K,R(:,1,1),'r',...
             K,R(:,1,2),'r.',...
             K,R(:,1,3),'ro',...
             K,R(:,1,4),'r--',...
             K,R(:,3,1),'b',...
             K,R(:,3,2),'b.',...
             K,R(:,3,3),'bo',...
             K,R(:,3,4),'b--');
    xlabel('|K|')
    ylabel('abs(Im(intermediateK)-Im(largeK))')
    legend('location','eastoutside',...
           'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
           'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3')
    title('Choosing imaginary cutoff')
    
    
    figure 
    R=abs(Rlong-Rinter)./abs(Rlong);

    loglog(K,real(R(:,1,1)),'r',...
             K,real(R(:,1,2)),'r.',...
             K,real(R(:,1,3)),'ro',...
             K,real(R(:,1,4)),'r--',...
             K,real(R(:,2,1)),'b',...
             K,real(R(:,2,2)),'b.',...
             K,real(R(:,2,3)),'bo',...
             K,real(R(:,2,4)),'b--',...         
             K,real(R(:,3,1)),'g',...
             K,real(R(:,3,2)),'g.',...
             K,real(R(:,3,3)),'go',...
             K,real(R(:,3,4)),'g--',...         
             K,real(R(:,4,1)),'k',...
             K,real(R(:,4,2)),'k.',...
             K,real(R(:,4,3)),'ko',...
             K,real(R(:,4,4)),'k--');
    xlabel('|K|')
    ylabel('abs((Re(intermediateK)-Re(largeK))/Re(intermediate))')
    legend('location','eastoutside',...
           'L=0, M=0','L=0, M=1','L=0, M=2','L=0, M=3',...
           'L=1, M=0','L=1, M=1','L=1, M=2','L=1, M=3',...
           'L=2, M=0','L=2, M=1','L=2, M=2','L=2, M=3',...
           'L=3, M=0','L=3, M=1','L=3, M=2','L=3, M=3')
    title('Choosing overall cutoff using relitive error')       

    
    
end
   
if testMatRoots

    ORDEig=6; %Needs to be even

    npts=100;
    R=zeros(npts,ORDEig);
    K=logspace(-1,2,npts);

    for count=1:npts
        R(count,:)=MatRoots(K(count),3,ORDEig)';
    end


    for I=1:2:ORDEig
        R(:,I)=real(R(:,I))+1i*abs(imag(R(:,I)));
        R(:,I+1)=real(R(:,I+1))-1i*abs(imag(R(:,I+1)));    
    end

    R=R';

    figure
    semilogx(K,real(R(1,:)),'.-',...
             K,real(R(2,:)),'.-',...
             K,real(R(3,:)),...
             K,real(R(4,:)),...
             K,real(R(5,:))...
             )
     xlabel('K')
     ylabel('Output of Matroots')
     legend('l=1','l=2','l=3','l=4','l=5')
     title('reak part, same as figure 1A')

     figure
     semilogx(K,imag(R(1,:)),'.-',...
             K,imag(R(2,:)),'.-',...
             K,imag(R(3,:)),...
             K,imag(R(4,:)),...
             K,imag(R(5,:)),...
             K,imag(R(5,:))...
             )
     xlabel('K')
     ylabel('Output of Matroots')
     legend('l=0','l=1','l=2','l=3','l=4','l=5')
     title('imagionary part, same as figure 1A')
end